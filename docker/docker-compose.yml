services:
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: ${ENVIRONMENT}
    container_name: checkout-backend
    ports:
      - "3000:${PORT}"
    environment:
      - PORT=${PORT}
    env_file:
      - ../.env
    volumes:
      - ../src:/app/src:ro
      - ../logs:/app/logs
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - db

  db:
    image: mysql:8.0
    command:
      - "--log_bin_trust_function_creators=1"
    volumes:
      - mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_AUTHENTICATION_PLUGIN: caching_sha2_password
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "while ! /usr/bin/mysqladmin ping -hlocalhost --silent; do echo '.'; done",
        ]
      interval: 10s
      timeout: 10s

volumes:
  mysql:

networks:
  app-network:
    driver: bridge
